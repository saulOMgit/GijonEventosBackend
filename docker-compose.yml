version: '3.8'

services:
  mysql-db:
    image: mysql:8.0
    container_name: gijoneventos-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword  # Cambia esto por una contraseña segura
      MYSQL_DATABASE: gijoneventos_db    # Nombre de tu BD
      MYSQL_USER: appuser               # Usuario para la app
      MYSQL_PASSWORD: apppassword       # Contraseña para la app
    ports:
      - "3306:3306"                     # Expone el puerto para acceso externo (ej: DBeaver)
    volumes:
      - mysql-data:/var/lib/mysql       # Persistencia de datos
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Opcional: Contenedor para tu app Spring Boot (descomenta si quieres levantarlo junto con MySQL)
  # backend-app:
  #   image: maven:3.8.6-openjdk-21   # Usa una imagen con Maven y Java 21
  #   container_name: gijoneventos-backend
  #   working_dir: /app
  #   volumes:
  #     - .:/app                       # Monta tu código local
  #   command: mvn spring-boot:run -Dspring-boot.run.profiles=mysql
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     mysql-db:
  #       condition: service_healthy
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/gijoneventos_db?useSSL=false&allowPublicKeyRetrieval=true
  #     SPRING_DATASOURCE_USERNAME: appuser
  #     SPRING_DATASOURCE_PASSWORD: apppassword

  # Opcional: phpMyAdmin para ver tablas vía web (accede en http://localhost:8081)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: gijoneventos-phpmyadmin
    environment:
      PMA_HOST: mysql-db
      PMA_USER: root
      PMA_PASSWORD: rootpassword
    ports:
      - "8081:80"
    depends_on:
      - mysql-db

volumes:
  mysql-data: